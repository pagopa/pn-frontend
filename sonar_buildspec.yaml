version: 0.2
env:
  shell: bash
  secrets-manager:
    SONAR_TOKEN: arn:aws:secretsmanager:eu-central-1:911845998067:secret:SonarCloud-7370vM:token
    CYPRESS_PF_ENV: arn:aws:secretsmanager:eu-central-1:911845998067:secret:cypress-McfeXF:pn-personafisica-webapp
    CYPRESS_PA_ENV: arn:aws:secretsmanager:eu-central-1:911845998067:secret:cypress-McfeXF:pn-pa-webapp
phases:
  install:
    runtime-versions:
      nodejs: 16
    commands:
      - apt-get update
      - apt-get -y upgrade
      # install yarn
      - echo Installing yarn...
      - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
      - echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
      - apt install --no-install-recommends yarn
      # cypress dependencies
      - apt-get install -y libatk1.0-0 libatk-bridge2.0-0 libcups2 libgtk-3-0 libxcomposite-dev libxdamage-dev libxrandr2 libgbm-dev libxkbcommon-x11-0 libasound2 libatspi2.0-dev
      # - apt-get install libatk1.0-0 -y
      # - apt-get install libatk-bridge2.0-0 -y
      # - apt-get install libcups2 -y
      # - apt-get install libgtk-3-0 -y
      # - apt-get install libxcomposite-dev -y
      # - apt-get install libxdamage-dev -y
      # - apt-get install libxrandr2 -y
      # - apt-get install libgbm-dev -y
      # - apt-get install libxkbcommon-x11-0 -y
      # - apt-get install libasound2 -y
      # - apt-get install libatspi2.0-dev -y
  pre_build:
    commands:
      - echo launching yarn install in $SUB_PRJ_NAME...
      - cd $SUB_PRJ_NAME
      - yarn install --frozen-lockfile
  build:
    commands:
      - echo Running tests with coverage...
      # - yarn test:coverage
      - BRANCH_NAME=$(echo $CODEBUILD_WEBHOOK_HEAD_REF | sed 's/refs\/heads\///'); export BRANCH_NAME=${BRANCH_NAME:=$GIT_DEFAULT_BRANCH}
      - if echo $CODEBUILD_SOURCE_VERSION | grep -q ^pr/ ; then PR_NUM=$(echo $CODEBUILD_SOURCE_VERSION | sed 's/pr\///'); BRANCH_TARGET=$(echo $CODEBUILD_WEBHOOK_BASE_REF | sed 's/refs\/heads\///'); export PR_NUM BRANCH_TARGET; fi;
      - echo Running sonar task...
      # - yarn run sonar
      - |
        if [ $SUB_PRJ_NAME == "packages/pn-personafisica-webapp" ] ; then
          echo Installing wait-on module...
          echo Starting application...
          yarn start-waiton
          echo Running cypress in headless mode...
          echo $CYPRESS_PF_ENV
          yarn cy-run --config '$CYPRESS_PF_ENV'
        fi
      
      # ldd /root/.cache/Cypress/10.8.0/Cypress/Cypress | grep 'not found'
      # yarn cy-run --config '$CYPRESS_ENV'

      # - sleep 5
      # - curl https://sonarcloud.io/api/qualitygates/project_status?projectKey=$Project >result.json
      # - cat result.json
      # - if [ $(jq -r '.projectStatus.status' result.json) = ERROR ] ; then $CODEBUILD_BUILD_SUCCEEDING -eq 0 ;fi