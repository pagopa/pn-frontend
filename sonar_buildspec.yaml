version: 0.2
env:
  variables:
    REACT_APP_URL_FE_LOGIN: https://portale-login.dev.pn.pagopa.it/
    REACT_APP_URL_API: https://webapi.dev.pn.pagopa.it/
    REACT_APP_PAGOPA_HELP_EMAIL: notifichedigitali@assistenza.pagopa.it
    REACT_APP_DISABLE_INACTIVITY_HANDLER: true
    REACT_APP_MIXPANEL_TOKEN: "aef0b0d89c3355510e9cdfdb18e7d0b5"
    REACT_APP_ONETRUST_DOMAIN_ID: "29cc1c86-f2ef-494d-8242-9bec8009cd29-test"
    HOST: 'portale.dev.pn.pagopa.it'
    HTTPS: true
    PORT: 443
  shell: bash
  secrets-manager:
    SONAR_TOKEN: arn:aws:secretsmanager:eu-central-1:911845998067:secret:SonarCloud-7370vM:token
    CYPRESS_pn_personafisica_webapp: arn:aws:secretsmanager:eu-central-1:911845998067:secret:cypress-McfeXF:pf
    CYPRESS_pn_pa_webapp: arn:aws:secretsmanager:eu-central-1:911845998067:secret:cypress-McfeXF:pa
    ENV_pn_personafisica_webapp: arn:aws:secretsmanager:eu-central-1:911845998067:secret:cypress-McfeXF:pf-env
    ENV_pn_pa_webapp: arn:aws:secretsmanager:eu-central-1:911845998067:secret:cypress-McfeXF:pa-env
phases:
  install:
    runtime-versions:
      nodejs: 16
    commands:
      - apt-get update
      - apt-get -y upgrade
      # install yarn
      - echo Installing yarn...
      - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
      - echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
      - apt install --no-install-recommends yarn
      # install cypress dependencies
      - apt-get install -y libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb
      # set hosts file
      - echo 127.0.0.1 portale.dev.pn.pagopa.it >> /etc/hosts
      - cat /etc/hosts
  pre_build:
    commands:
      - echo launching yarn install in $SUB_PRJ_NAME...
      - cd $SUB_PRJ_NAME
      - yarn install --frozen-lockfile
  build:
    commands:
      # extract project name
      - PRJ_NAME=${SUB_PRJ_NAME##*/}
      - echo CURRENT PROJECT IS $PRJ_NAME
      - echo Running tests with coverage...
      # - yarn test:coverage
      - BRANCH_NAME=$(echo $CODEBUILD_WEBHOOK_HEAD_REF | sed 's/refs\/heads\///'); export BRANCH_NAME=${BRANCH_NAME:=$GIT_DEFAULT_BRANCH}
      - if echo $CODEBUILD_SOURCE_VERSION | grep -q ^pr/ ; then PR_NUM=$(echo $CODEBUILD_SOURCE_VERSION | sed 's/pr\///'); BRANCH_TARGET=$(echo $CODEBUILD_WEBHOOK_BASE_REF | sed 's/refs\/heads\///'); export PR_NUM BRANCH_TARGET; fi;
      - echo Running sonar task...
      # - yarn run sonar
      - |
        if [ -d "cypress/" ] ; then
          echo Creating .env file...
          DEV_ENV="ENV_${PRJ_NAME//-/_}"
          echo variable name is $DEV_ENV
      # echo ${!DEV_ENV} > .env.development.local
          echo Starting application...
          yarn start-waiton
          echo Creating Cypress env file...
          CYPRESS_ENV="CYPRESS_${PRJ_NAME}"
          echo ${!CYPRESS_ENV} > cypress.env.json
          echo Running Cypress in headless mode...
          yarn cy-run
        fi
      
      # yarn cy-run --config video=false --headless
      # ldd /root/.cache/Cypress/10.8.0/Cypress/Cypress | grep 'not found'

      # - sleep 5
      # - curl https://sonarcloud.io/api/qualitygates/project_status?projectKey=$Project >result.json
      # - cat result.json
      # - if [ $(jq -r '.projectStatus.status' result.json) = ERROR ] ; then $CODEBUILD_BUILD_SUCCEEDING -eq 0 ;fi