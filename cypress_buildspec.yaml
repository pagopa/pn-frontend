version: 0.2
env:
  shell: bash
  secrets-manager:
    SONAR_TOKEN: arn:aws:secretsmanager:eu-central-1:911845998067:secret:SonarCloud-7370vM:token
phases:
  install:
    runtime-versions:
      nodejs: 16
    commands:
      - apt-get update
      - apt-get -y upgrade
      # install yarn
      - echo Installing yarn...
      - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
      - echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
      - apt install --no-install-recommends yarn
      # install cypress dependencies
      - apt-get install -y libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb
  pre_build:
    commands:
      - echo launching yarn install in $SUB_PRJ_NAME...
      - cd $SUB_PRJ_NAME
      - yarn install --frozen-lockfile
  build:
    commands:
      - BRANCH_NAME=$(echo $CODEBUILD_WEBHOOK_HEAD_REF | sed 's/refs\/heads\///'); export BRANCH_NAME=${BRANCH_NAME:=$GIT_DEFAULT_BRANCH}
      - if echo $CODEBUILD_SOURCE_VERSION | grep -q ^pr/ ; then PR_NUM=$(echo $CODEBUILD_SOURCE_VERSION | sed 's/pr\///'); BRANCH_TARGET=$(echo $CODEBUILD_WEBHOOK_BASE_REF | sed 's/refs\/heads\///'); export PR_NUM BRANCH_TARGET; fi;
      # verify the "cypress" folder is present and, if so, run the cypress tests
      # if [ -d "cypress/" -a  $SUB_PRJ_NAME != "packages/pn-personagiuridica-webapp" ] ; then

      # - |
      #   if [ -d "cypress/" ] ; then
      #     echo Fetching .env variables...
      #     source .env.cypress

      #     echo Setting up hosts file...
      #     echo "127.0.0.1 $HOST" >> /etc/hosts

      #     echo Renaming file .env.cypress to .env.development.local...
      #     mv .env.cypress .env.development.local

      #     echo Creating cypress.env.json file...
      #     echo -e "${!CYPRESS_ENV}" > cypress.env.json

      #     echo Starting application...
      #     yarn start-waiton $WEBAPP_URL

      #     echo Running Cypress in headless mode...
      #     yarn cy-run --config video=false
      #   fi
      ## Running the development server
      - echo Setting up and running the web application...
      # Fetching .env variables
      - source .env.cypress
      # Setting up hosts file
      - echo "127.0.0.1 $HOST" >> /etc/hosts
      # Renaming file .env.cypress to .env.development.local
      - mv .env.cypress .env.development.local
      # starting the webapp and waiting for its availability
      - yarn start-waiton $WEBAPP_URL
      ## Running Cypress
      - echo Setting up and running the test environment
      # Creating cypress.env.json file
      - echo -e "${!CYPRESS_ENV}" > cypress.env.json
      # Running Cypress in headless mode
      - yarn cy-run --config video=false
