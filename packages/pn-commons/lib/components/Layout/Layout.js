import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { Stack } from '@mui/material';
import { Box } from '@mui/system';
import ErrorBoundary from '../ErrorBoundary';
import Footer from '../Footer/Footer';
import Header from '../Header/Header';
export default function Layout({ children, onExitAction, sideMenu, showSideMenu = true, productsList, showHeaderProduct, productId, partyId, partyList, loggedUser, enableUserDropdown, userActions, onLanguageChanged = () => { }, eventTrackingCallbackAppCrash, eventTrackingCallbackProductSwitch, eventTrackingCallbackRefreshPage, onAssistanceClick, isLogged, showHeader = true, showFooter = true, hasTermsOfService, }) {
    return (_jsx(ErrorBoundary, { sx: { height: 'calc(100vh - 5px)' }, eventTrackingCallback: eventTrackingCallbackAppCrash, eventTrackingCallbackRefreshPage: eventTrackingCallbackRefreshPage, children: _jsx(Stack, { direction: "column", sx: { minHeight: 'calc(100vh - 5px)' }, children: _jsxs(_Fragment, { children: [showHeader && (_jsx(Header, { onExitAction: onExitAction, productsList: productsList, showHeaderProduct: showHeaderProduct, productId: productId, partyId: partyId, partyList: partyList, loggedUser: loggedUser, enableDropdown: enableUserDropdown, userActions: userActions, onAssistanceClick: onAssistanceClick, eventTrackingCallbackProductSwitch: eventTrackingCallbackProductSwitch, isLogged: isLogged })), _jsxs(Stack, { direction: { xs: 'column', lg: 'row' }, sx: { flexGrow: 1 }, children: [showSideMenu && (_jsx(Box, { sx: { width: { lg: 300 }, flexShrink: '0' }, component: "nav", "data-testid": "side-menu", children: sideMenu })), _jsx(Box, { sx: { flexGrow: 1, flexBasis: { xs: 1, lg: 'auto' }, position: 'relative' }, component: "main", children: _jsx(ErrorBoundary, { eventTrackingCallback: eventTrackingCallbackAppCrash, children: children }) })] }), showFooter && (_jsx(Footer, { loggedUser: loggedUser.id !== '', onLanguageChanged: onLanguageChanged, hasTermsOfService: hasTermsOfService }))] }) }) }));
}
