import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { useState } from 'react';
import { Accordion, AccordionSummary, Box, Paper, Table, TableBody, TableContainer, Typography, } from '@mui/material';
import UnfoldMoreIcon from '@mui/icons-material/UnfoldMore';
import UnfoldLessIcon from '@mui/icons-material/UnfoldLess';
import { getLocalizedOrDefaultLabel } from '../../services/localization.service';
import { formatEurocentToCurrency, formatFiscalCode } from '../../utils';
import CustomTableRow from '../CustomTableRow';
const PaymentTable = ({ paymentDetails, showRecipientType }) => (_jsx(TableContainer, { component: Paper, sx: { backgroundColor: 'background.default', p: 3 }, "data-testid": "paymentTable", elevation: 0, children: _jsx(Table, { "aria-label": getLocalizedOrDefaultLabel('notifiche', 'detail.payment-table-aria-label', 'Dettaglio pagamenti'), children: _jsxs(TableBody, { children: [showRecipientType && paymentDetails.recipientType && (_jsx(CustomTableRow, { label: getLocalizedOrDefaultLabel('notifiche', 'detail.payment.recipient-type', 'Tipo di destinatario'), dataTestId: "recipientType", value: paymentDetails.recipientType === 'PF'
                        ? getLocalizedOrDefaultLabel('notifiche', 'detail.payment.natural-person', 'Persona fisica')
                        : getLocalizedOrDefaultLabel('notifiche', 'detail.payment.legal-person', 'Persona giuridica') }, void 0)), paymentDetails.paymentObject && (_jsx(CustomTableRow, { label: getLocalizedOrDefaultLabel('notifiche', 'detail.payment.object', 'Oggetto del pagamento'), value: paymentDetails.paymentObject, dataTestId: "paymentObject" }, void 0)), paymentDetails.amount && paymentDetails.amount !== 0 ? (_jsx(CustomTableRow, { label: getLocalizedOrDefaultLabel('notifiche', 'detail.payment.amount', 'Importo'), value: formatEurocentToCurrency(paymentDetails.amount), dataTestId: "amount" }, void 0)) : null, _jsx(CustomTableRow, { label: getLocalizedOrDefaultLabel('notifiche', 'detail.payment.type', 'Tipologia di pagamento'), value: paymentDetails.idF24
                        ? 'F24'
                        : getLocalizedOrDefaultLabel('notifiche', 'detail.payment.pagopa-notice', 'Avviso pagoPA'), dataTestId: "paymentType" }, void 0), paymentDetails.noticeCode && (_jsx(CustomTableRow, { label: getLocalizedOrDefaultLabel('notifiche', 'detail.notice-code', 'Codice Avviso'), value: paymentDetails.noticeCode.match(/.{1,4}/g)?.join(' '), dataTestId: "noticeCode" }, void 0)), paymentDetails.creditorTaxId && (_jsx(CustomTableRow, { label: getLocalizedOrDefaultLabel('notifiche', 'detail.creditor-tax-id', 'Codice Fiscale Ente'), value: formatFiscalCode(paymentDetails.creditorTaxId), dataTestId: "creditorTaxId" }, void 0))] }, void 0) }, void 0) }, void 0));
const NotificationPaidDetail = ({ paymentDetailsList, isSender }) => {
    const [expanded, setExpanded] = useState(false);
    const handleChange = (panel) => (_, isExpanded) => {
        setExpanded(isExpanded ? panel : false);
    };
    return (_jsxs(_Fragment, { children: [paymentDetailsList && paymentDetailsList.length === 1 && (_jsxs(Box, { mt: 2, children: [isSender && (_jsxs(Typography, { fontSize: "16px", fontWeight: 600, "data-testid": "paymentRecipient", mb: 2, children: [paymentDetailsList[0].recipientDenomination, " - ", paymentDetailsList[0].recipientTaxId] }, void 0)), _jsx(PaymentTable, { paymentDetails: paymentDetailsList[0], showRecipientType: isSender }, void 0)] }, void 0)), paymentDetailsList &&
                paymentDetailsList.length > 1 &&
                paymentDetailsList.map((paymentEventDetails, index) => isSender ? (_jsxs(Accordion, { expanded: expanded === `panel-${index}`, onChange: handleChange(`panel-${index}`), disableGutters: true, "data-testid": "paymentAccordion", children: [_jsx(AccordionSummary, { expandIcon: expanded === `panel-${index}` ? (_jsx(UnfoldLessIcon, { color: "primary" }, void 0)) : (_jsx(UnfoldMoreIcon, { color: "primary" }, void 0)), children: _jsxs(Box, { width: "100%", display: "flex", flexDirection: "row", justifyContent: "space-between", alignItems: "center", children: [_jsxs(Typography, { fontSize: "16px", fontWeight: "600", "data-testid": "recipient", children: [paymentEventDetails.recipientDenomination, " -", ' ', paymentEventDetails.recipientTaxId] }, void 0), _jsx(Typography, { fontSize: "14px", fontWeight: "600", color: "primary", children: getLocalizedOrDefaultLabel('notifiche', 'payment.show-more', 'Mostra dettagli') }, void 0)] }, void 0) }, void 0), _jsx(PaymentTable, { paymentDetails: paymentEventDetails, showRecipientType: true }, void 0)] }, index)) : (_jsx(PaymentTable, { paymentDetails: paymentEventDetails }, index)))] }, void 0));
};
export default NotificationPaidDetail;
